{"version":3,"file":"static/js/883.ca8a3522.chunk.js","mappings":"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","sources":["shared/components/CardChart.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  Tooltip,\n  ResponsiveContainer,\n  YAxis,\n} from \"recharts\";\nimport format from \"date-fns/format\";\nimport { Card, CardContent, Typography, IconButton, Menu, MenuItem, Box } from \"@mui/material\";\nimport withStyles from '@mui/styles/withStyles';\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\n\nconst styles = (theme) => ({\n  cardContentInner: {\n    marginTop: theme.spacing(-4),\n  },\n});\n\nfunction labelFormatter(label) {\n  return format(new Date(label * 1000), \"MMMM d, p yyyy\");\n}\n\nfunction calculateMin(data, yKey, factor) {\n  let max = Number.POSITIVE_INFINITY;\n  data.forEach((element) => {\n    if (max > element[yKey]) {\n      max = element[yKey];\n    }\n  });\n  return Math.round(max - max * factor);\n}\n\nconst itemHeight = 216;\nconst options = [\"1 Week\", \"1 Month\", \"6 Months\"];\n\nfunction CardChart(props) {\n  const { color, data, title, classes, theme, height } = props;\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(\"1 Month\");\n\n  const handleClick = useCallback(\n    (event) => {\n      setAnchorEl(event.currentTarget);\n    },\n    [setAnchorEl]\n  );\n\n  const formatter = useCallback(\n    (value) => {\n      return [value, title];\n    },\n    [title]\n  );\n\n  const getSubtitle = useCallback(() => {\n    switch (selectedOption) {\n      case \"1 Week\":\n        return \"Last week\";\n      case \"1 Month\":\n        return \"Last month\";\n      case \"6 Months\":\n        return \"Last 6 months\";\n      default:\n        throw new Error(\"No branch selected in switch-statement\");\n    }\n  }, [selectedOption]);\n\n  const processData = useCallback(() => {\n    let seconds;\n    switch (selectedOption) {\n      case \"1 Week\":\n        seconds = 60 * 60 * 24 * 7;\n        break;\n      case \"1 Month\":\n        seconds = 60 * 60 * 24 * 31;\n        break;\n      case \"6 Months\":\n        seconds = 60 * 60 * 24 * 31 * 6;\n        break;\n      default:\n        throw new Error(\"No branch selected in switch-statement\");\n    }\n    const minSeconds = new Date() / 1000 - seconds;\n    const arr = [];\n    for (let i = 0; i < data.length; i += 1) {\n      if (minSeconds < data[i].timestamp) {\n        arr.unshift(data[i]);\n      }\n    }\n    return arr;\n  }, [data, selectedOption]);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, [setAnchorEl]);\n\n  const selectOption = useCallback(\n    (selectedOption) => {\n      setSelectedOption(selectedOption);\n      handleClose();\n    },\n    [setSelectedOption, handleClose]\n  );\n\n  const isOpen = Boolean(anchorEl);\n  return (\n    <Card>\n      <Box pt={2} px={2} pb={4}>\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <div>\n            <Typography variant=\"subtitle1\">{title}</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {getSubtitle()}\n            </Typography>\n          </div>\n          <div>\n            <IconButton\n              aria-label=\"More\"\n              aria-owns={isOpen ? \"long-menu\" : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleClick}\n              size=\"large\">\n              <MoreVertIcon />\n            </IconButton>\n            <Menu\n              id=\"long-menu\"\n              anchorEl={anchorEl}\n              open={isOpen}\n              onClose={handleClose}\n              PaperProps={{\n                style: {\n                  maxHeight: itemHeight,\n                  width: 200,\n                },\n              }}\n              disableScrollLock\n            >\n              {options.map((option) => (\n                <MenuItem\n                  key={option}\n                  selected={option === selectedOption}\n                  onClick={() => {\n                    selectOption(option);\n                  }}\n                  name={option}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n        </Box>\n      </Box>\n      <CardContent>\n        <Box className={classes.cardContentInner} height={height}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <AreaChart data={processData()} type=\"number\">\n              <XAxis\n                dataKey=\"timestamp\"\n                type=\"number\"\n                domain={[\"dataMin\", \"dataMax\"]}\n                hide\n              />\n              <YAxis\n                domain={[calculateMin(data, \"value\", 0.05), \"dataMax\"]}\n                hide\n              />\n              <Area\n                type=\"monotone\"\n                dataKey=\"value\"\n                stroke={color}\n                fill={color}\n              />\n              <Tooltip\n                labelFormatter={labelFormatter}\n                formatter={formatter}\n                cursor={false}\n                contentStyle={{\n                  border: \"none\",\n                  padding: theme.spacing(1),\n                  borderRadius: theme.shape.borderRadius,\n                  boxShadow: theme.shadows[1],\n                }}\n                labelStyle={theme.typography.body1}\n                itemStyle={{\n                  fontSize: theme.typography.body1.fontSize,\n                  letterSpacing: theme.typography.body1.letterSpacing,\n                  fontFamily: theme.typography.body1.fontFamily,\n                  lineHeight: theme.typography.body1.lineHeight,\n                  fontWeight: theme.typography.body1.fontWeight,\n                }}\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nCardChart.propTypes = {\n  color: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  height: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CardChart);\n"],"names":["labelFormatter","label","format","Date","calculateMin","data","yKey","factor","max","Number","POSITIVE_INFINITY","forEach","element","Math","round","options","withStyles","theme","cardContentInner","marginTop","spacing","withTheme","props","color","title","classes","height","anchorEl","setAnchorEl","useState","selectedOption","setSelectedOption","handleClick","useCallback","event","currentTarget","formatter","value","getSubtitle","Error","processData","seconds","minSeconds","arr","i","length","timestamp","unshift","handleClose","selectOption","isOpen","Boolean","_jsxs","Card","children","_jsx","Box","pt","px","pb","display","justifyContent","Typography","variant","IconButton","undefined","onClick","size","MoreVertIcon","Menu","id","open","onClose","PaperProps","style","maxHeight","width","disableScrollLock","map","option","MenuItem","selected","name","CardContent","className","ResponsiveContainer","AreaChart","type","XAxis","dataKey","domain","hide","YAxis","Area","stroke","fill","Tooltip","cursor","contentStyle","border","padding","borderRadius","shape","boxShadow","shadows","labelStyle","typography","body1","itemStyle","fontSize","letterSpacing","fontFamily","lineHeight","fontWeight"],"sourceRoot":""}